swf.load.complete.config.tables.if.count.less.than=500
swf.plugins.background.core.workers.numThreads=3
swf.application.authentication.required=false
swf.application.name=Mandi (HumBhiOnline - Test System)
swf.application.description=A refreshingly Indian market place!
swf.listview.housekeeping.show=true



## if you have a domain where you are hosting this server, you can put that domain here. 
swf.host=localhost
swf.external.scheme=http
swf.external.port=4030

#gtok=A Secret Token you could use to shutdown  the server and restart. You may pass base64 encoded value of this token from git push webhook and its likes as the http header Gitlab-Token. 


#Don't uncomment these lines -- start
#swf.jdbc.h2.driver=org.h2.Driver
#swf.jdbc.h2.url=jdbc:h2:./database/mandi;AUTO_SERVER=TRUE;
#swf.jdbc.h2.userid=mandi
#swf.jdbc.h2.password=mandi
#swf.jdbc.h2.validationQuery=values(1)
#swf.jdbc.h2.dbschema=PUBLIC
#swf.jdbc.h2.dbschema.setonconnection=true
#swf.jdbc.h2.set.dbschema.command=set schema public
#Don't uncomment these lines -- end


swf.jdbc.driver=org.h2.Driver
swf.jdbc.url=jdbc:h2:./database/mandi;AUTO_SERVER=TRUE;
swf.jdbc.userid=mandi
swf.jdbc.password=mandi
swf.jdbc.validationQuery=values(1)
swf.jdbc.dbschema=PUBLIC
swf.jdbc.dbschema.setonconnection=true
swf.jdbc.set.dbschema.command=set schema public

#swf.jdbc.dbschema=public
#swf.jdbc.dbschema.setonconnection=true
#swf.jdbc.set.dbschema.command=set search_path to 'public'
#swf.jdbc.url=jdbc:postgresql://localhost:5433/hbo
#swf.jdbc.driver=org.postgresql.Driver
#swf.jdbc.userid=yugabyte
#swf.jdbc.password=yugabyte
#swf.jdbc.supportsSavePoints=false

#swf.jdbc.dbschema=public
#swf.jdbc.dbschema.setonconnection=true
#swf.jdbc.set.dbschema.command=set search_path to 'public'
#swf.jdbc.url=jdbc:postgresql://localhost:26257/hbo?application_name=HumBhiOnline&sslmode=require&sslrootcert=/usr/local/cockroach/certs/ca.cert&sslcert=/usr/local/cockroach/certs/client.root.cert&sslkey=/usr/local/cockroach/certs/client.root.key
#swf.jdbc.driver=com.venky.swf.db.drivers.CockroachDBDummyDriver
#swf.jdbc.userid=venky
#swf.jdbc.password=venky

#swf.jdbc.dbschema=public
#swf.jdbc.dbschema.setonconnection=true
#swf.jdbc.set.dbschema.command=set search_path to 'public'
#swf.jdbc.url=jdbc:postgresql://172.17.0.1/manditest
#swf.jdbc.driver=org.postgresql.Driver
#swf.jdbc.userid=venky
#swf.jdbc.password=venky
#swf.jdbc.readOnly=true


swf.jdbc.datamart.driver=org.h2.Driver
swf.jdbc.datamart.url=jdbc:h2:./database/humbhi;AUTO_SERVER=TRUE;
swf.jdbc.datamart.userid=humbhi
swf.jdbc.datamart.password=humbhi
swf.jdbc.datamart.validationQuery=values(1)
swf.jdbc.datamart.dbschema=PUBLIC
swf.jdbc.datamart.dbschema.setonconnection=true
swf.jdbc.datamart.set.dbschema.command=set schema public

swf.jdbc.telecom.driver=org.h2.Driver
swf.jdbc.telecom.url=jdbc:h2:./database/telecom;AUTO_SERVER=TRUE;
swf.jdbc.telecom.userid=humbhi
swf.jdbc.telecom.password=humbhi
swf.jdbc.telecom.validationQuery=values(1)
swf.jdbc.telecom.dbschema=PUBLIC
swf.jdbc.telecom.dbschema.setonconnection=true
swf.jdbc.telecom.set.dbschema.command=set schema public

swf.jdbc.registry.driver=org.h2.Driver
swf.jdbc.registry.url=jdbc:h2:./database/registry;AUTO_SERVER=TRUE;
swf.jdbc.registry.userid=humbhi
swf.jdbc.registry.password=humbhi
swf.jdbc.registry.validationQuery=values(1)
swf.jdbc.registry.dbschema=PUBLIC
swf.jdbc.registry.dbschema.setonconnection=true
swf.jdbc.registry.set.dbschema.command=set schema public


#Fire base configuration for push notifications. Sellers would get notified when orders come through.
#push.server.private.key=
#push.server.public.key=
#push.service.account.json=config/[whatever]-firebase-adminsdk.json
#push.service.database.url=https://[whatever].firebaseio.com


swf.application.requires.registration=true

swf.ftl.dir=src/main/resources/templates

root.phone_number=1234567890
Login.Name.Literal=Mobile Number

#If you use MSG91 to send otp 
#swf.msg91.auth.key=
#swf.msg91.sender.id=
#swf.msg91.otp.template.id=
#swf.msg91.otp.expiry=10
#swf.msg91.otp.length=4

#If you use 2factor to send otp 
#swf.2f.auth.key=
#swf.2f.sender.id=
#swf.2f.otp.template.id=
#swf.2f.otp.expiry=10
#swf.2f.otp.length=4

#Indicate your otp provider.
#swf.otp.provider=2f|msg91 


#swf.sendmail.protocol=SMTP
#swf.sendmail.smtp.auth=SMTP_PLAIN
#swf.sendmail.smtp.host=
#swf.sendmail.user=
#swf.sendmail.user.name=
#swf.sendmail.account=
#swf.sendmail.password=
#swf.sendmail.smtp.port=

## Uncomment the provider you use for geocoding. 
#geocoder.here.app_id=
#geocoder.here.app_key=
#geocoder.google.api_key=


#These configurations are to encrypt private user  information.
#swf.key.store.directory=./.keystore
#swf.key.store.password=change_on_install
#swf.key.entry.succinct.password=change_on_install
swf.encryption.support=false

#Password is kept to encrypted by default.
swf.user.password.encrypted=true


#Only if you are part of a beckn network as a bpp, point to the correct registry and uncomment the lines below
#beckn-one.succinct.in is a sample registry used generally for testing purposes.
#beckn.auth.enabled=true
#beckn.registry.id=beckn-one.succinct.in
#beckn.registry.url=https://beckn-one.succinct.in/subscribers

#Uncomment below only if you have a licenced partner of humbhionline network. 
#For a Staging system uncomment below
#hbo.registry.url=https://mandi.succinct.in
#For production system uncomment below 
#hbo.registry.url=https://humbhionline.in


## Unfinished  We Fast integration Don't use yet!
#test url
#wefast.api.url= https://robotapitest.wefast.in/api/business/1.1
#prod url
#wefast.api.url= https://robot.wefast.in/api/business/1.1
#wefast.api.token=
#wefast.callback.token=
